// Auto-generated by https://github.com/react-spring/gltfjsx

import { useGLTF, useTexture } from "@react-three/drei"
import { useFrame, useThree } from "@react-three/fiber"
import React, { FC, useRef, useState } from "react"
import * as THREE from "three"
import { Bone, Object3D, SkinnedMesh } from "three"
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader"

type Mouse = { x: number, y: number }
function moveJoint(joint: Bone) {
  joint.rotation.x = Math.random() * 3.14
  joint.rotation.y = Math.random() * 3.14
}

const Model: FC = ({ ...props }) => {
  const group = useRef()
  const { nodes, animations } = useGLTF("/dancer.glb") as GLTF & { nodes: { [e in string]: (Object3D | Bone | SkinnedMesh) } }
  const stacy = nodes["Beta_Surface"] as SkinnedMesh
  const texture = useTexture('stacy.jpg')

  const { size } = useThree()
  useFrame((state, delta) => {
    moveJoint(nodes.mixamorigNeck as Bone)
    moveJoint(nodes.mixamorigSpine as Bone)
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[0, 0, 0]}>
        <primitive object={nodes["mixamorigHips"]} />
        <skinnedMesh receiveShadow castShadow geometry={stacy.geometry} skeleton={stacy.skeleton}>
          <meshStandardMaterial map={texture} map-flipY={false} skinning />
        </skinnedMesh>
      </group>
    </group>
  )
}
export default Model
